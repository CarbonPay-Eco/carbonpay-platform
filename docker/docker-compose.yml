version: '3.8'

services:
  backend:
    build:
      context: ../app/backend
      dockerfile: Dockerfile
    container_name: carbonpay-backend
    restart: unless-stopped
    ports:
      - "${SERVER_PORT:-3000}:${SERVER_PORT:-3000}"
    env_file:
      - ../.env
    volumes:
      - ../app/backend/src:/app/src
    networks:
      - carbonpay-network
    environment:
      - NODE_ENV=${NODE_ENV:-development}
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:${SERVER_PORT:-3000}/api/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:13
    ports:
      - "${DB_PORT:-5432}:${DB_PORT:-5432}"
    env_file:
      - ../.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - carbonpay-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB" ]
      interval: 10s
      timeout: 5s
      retries: 5
  # frontend:
  #   build:
  #     context: ../frontend
  #     dockerfile: Dockerfile
  #   ports:
  #     - "${PORT:-3001}:${PORT:-3001}"
  #   env_file:
  #     - .env
  #   volumes:
  #     - ../client:/usr/src/app
  #     - /usr/src/app/node_modules
  #   command: npm start

networks:
  carbonpay-network:
    driver: bridge

volumes:
  postgres_data:
